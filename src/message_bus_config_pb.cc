// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_bus_config.proto

#include "message_bus_config_pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_message_5fbus_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MalamuteClientConfig_message_5fbus_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_5fbus_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnixSocketClientConfig_message_5fbus_5fconfig_2eproto;
namespace messagebus {
class MalamuteClientConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MalamuteClientConfig> _instance;
} _MalamuteClientConfig_default_instance_;
class UnixSocketClientConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnixSocketClientConfig> _instance;
} _UnixSocketClientConfig_default_instance_;
class MessageBusConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessageBusConfig> _instance;
  const ::messagebus::MalamuteClientConfig* malamute_client_config_;
  const ::messagebus::UnixSocketClientConfig* unix_client_config_;
} _MessageBusConfig_default_instance_;
}  // namespace messagebus
static void InitDefaultsscc_info_MalamuteClientConfig_message_5fbus_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messagebus::_MalamuteClientConfig_default_instance_;
    new (ptr) ::messagebus::MalamuteClientConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messagebus::MalamuteClientConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MalamuteClientConfig_message_5fbus_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MalamuteClientConfig_message_5fbus_5fconfig_2eproto}, {}};

static void InitDefaultsscc_info_MessageBusConfig_message_5fbus_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messagebus::_MessageBusConfig_default_instance_;
    new (ptr) ::messagebus::MessageBusConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messagebus::MessageBusConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MessageBusConfig_message_5fbus_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_MessageBusConfig_message_5fbus_5fconfig_2eproto}, {
      &scc_info_MalamuteClientConfig_message_5fbus_5fconfig_2eproto.base,
      &scc_info_UnixSocketClientConfig_message_5fbus_5fconfig_2eproto.base,}};

static void InitDefaultsscc_info_UnixSocketClientConfig_message_5fbus_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messagebus::_UnixSocketClientConfig_default_instance_;
    new (ptr) ::messagebus::UnixSocketClientConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messagebus::UnixSocketClientConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnixSocketClientConfig_message_5fbus_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnixSocketClientConfig_message_5fbus_5fconfig_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_message_5fbus_5fconfig_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_message_5fbus_5fconfig_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_message_5fbus_5fconfig_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_message_5fbus_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messagebus::MalamuteClientConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messagebus::MalamuteClientConfig, end_point_),
  PROTOBUF_FIELD_OFFSET(::messagebus::MalamuteClientConfig, agent_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messagebus::UnixSocketClientConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messagebus::UnixSocketClientConfig, socket_path_),
  PROTOBUF_FIELD_OFFSET(::messagebus::UnixSocketClientConfig, agent_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messagebus::MessageBusConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::messagebus::MessageBusConfig, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::messagebus::MessageBusConfig, queue_name_),
  offsetof(::messagebus::MessageBusConfigDefaultTypeInternal, malamute_client_config_),
  offsetof(::messagebus::MessageBusConfigDefaultTypeInternal, unix_client_config_),
  PROTOBUF_FIELD_OFFSET(::messagebus::MessageBusConfig, parameters_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::messagebus::MalamuteClientConfig)},
  { 7, -1, sizeof(::messagebus::UnixSocketClientConfig)},
  { 14, -1, sizeof(::messagebus::MessageBusConfig)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messagebus::_MalamuteClientConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messagebus::_UnixSocketClientConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::messagebus::_MessageBusConfig_default_instance_),
};

const char descriptor_table_protodef_message_5fbus_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030message_bus_config.proto\022\nmessagebus\"="
  "\n\024MalamuteClientConfig\022\021\n\tend_point\030\001 \001("
  "\t\022\022\n\nagent_name\030\002 \001(\t\"A\n\026UnixSocketClien"
  "tConfig\022\023\n\013socket_path\030\001 \001(\t\022\022\n\nagent_na"
  "me\030\002 \001(\t\"\272\001\n\020MessageBusConfig\022\022\n\nqueue_n"
  "ame\030\001 \001(\t\022B\n\026malamute_client_config\030\002 \001("
  "\0132 .messagebus.MalamuteClientConfigH\000\022@\n"
  "\022unix_client_config\030\003 \001(\0132\".messagebus.U"
  "nixSocketClientConfigH\000B\014\n\nparametersb\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_message_5fbus_5fconfig_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_message_5fbus_5fconfig_2eproto_sccs[3] = {
  &scc_info_MalamuteClientConfig_message_5fbus_5fconfig_2eproto.base,
  &scc_info_MessageBusConfig_message_5fbus_5fconfig_2eproto.base,
  &scc_info_UnixSocketClientConfig_message_5fbus_5fconfig_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_message_5fbus_5fconfig_2eproto_once;
static bool descriptor_table_message_5fbus_5fconfig_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_5fbus_5fconfig_2eproto = {
  &descriptor_table_message_5fbus_5fconfig_2eproto_initialized, descriptor_table_protodef_message_5fbus_5fconfig_2eproto, "message_bus_config.proto", 365,
  &descriptor_table_message_5fbus_5fconfig_2eproto_once, descriptor_table_message_5fbus_5fconfig_2eproto_sccs, descriptor_table_message_5fbus_5fconfig_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_message_5fbus_5fconfig_2eproto::offsets,
  file_level_metadata_message_5fbus_5fconfig_2eproto, 3, file_level_enum_descriptors_message_5fbus_5fconfig_2eproto, file_level_service_descriptors_message_5fbus_5fconfig_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_message_5fbus_5fconfig_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_message_5fbus_5fconfig_2eproto), true);
namespace messagebus {

// ===================================================================

void MalamuteClientConfig::InitAsDefaultInstance() {
}
class MalamuteClientConfig::_Internal {
 public:
};

MalamuteClientConfig::MalamuteClientConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:messagebus.MalamuteClientConfig)
}
MalamuteClientConfig::MalamuteClientConfig(const MalamuteClientConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  end_point_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_end_point().empty()) {
    end_point_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.end_point_);
  }
  agent_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_agent_name().empty()) {
    agent_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.agent_name_);
  }
  // @@protoc_insertion_point(copy_constructor:messagebus.MalamuteClientConfig)
}

void MalamuteClientConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MalamuteClientConfig_message_5fbus_5fconfig_2eproto.base);
  end_point_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  agent_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MalamuteClientConfig::~MalamuteClientConfig() {
  // @@protoc_insertion_point(destructor:messagebus.MalamuteClientConfig)
  SharedDtor();
}

void MalamuteClientConfig::SharedDtor() {
  end_point_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  agent_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MalamuteClientConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MalamuteClientConfig& MalamuteClientConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MalamuteClientConfig_message_5fbus_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void MalamuteClientConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:messagebus.MalamuteClientConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  end_point_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  agent_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* MalamuteClientConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string end_point = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_end_point();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messagebus.MalamuteClientConfig.end_point"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string agent_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_agent_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messagebus.MalamuteClientConfig.agent_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MalamuteClientConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messagebus.MalamuteClientConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string end_point = 1;
  if (this->end_point().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_end_point().data(), static_cast<int>(this->_internal_end_point().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messagebus.MalamuteClientConfig.end_point");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_end_point(), target);
  }

  // string agent_name = 2;
  if (this->agent_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_name().data(), static_cast<int>(this->_internal_agent_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messagebus.MalamuteClientConfig.agent_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_agent_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messagebus.MalamuteClientConfig)
  return target;
}

size_t MalamuteClientConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messagebus.MalamuteClientConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string end_point = 1;
  if (this->end_point().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_end_point());
  }

  // string agent_name = 2;
  if (this->agent_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MalamuteClientConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messagebus.MalamuteClientConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MalamuteClientConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MalamuteClientConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messagebus.MalamuteClientConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messagebus.MalamuteClientConfig)
    MergeFrom(*source);
  }
}

void MalamuteClientConfig::MergeFrom(const MalamuteClientConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messagebus.MalamuteClientConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.end_point().size() > 0) {

    end_point_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.end_point_);
  }
  if (from.agent_name().size() > 0) {

    agent_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.agent_name_);
  }
}

void MalamuteClientConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messagebus.MalamuteClientConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MalamuteClientConfig::CopyFrom(const MalamuteClientConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messagebus.MalamuteClientConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MalamuteClientConfig::IsInitialized() const {
  return true;
}

void MalamuteClientConfig::InternalSwap(MalamuteClientConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  end_point_.Swap(&other->end_point_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  agent_name_.Swap(&other->agent_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata MalamuteClientConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnixSocketClientConfig::InitAsDefaultInstance() {
}
class UnixSocketClientConfig::_Internal {
 public:
};

UnixSocketClientConfig::UnixSocketClientConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:messagebus.UnixSocketClientConfig)
}
UnixSocketClientConfig::UnixSocketClientConfig(const UnixSocketClientConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  socket_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_socket_path().empty()) {
    socket_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.socket_path_);
  }
  agent_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_agent_name().empty()) {
    agent_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.agent_name_);
  }
  // @@protoc_insertion_point(copy_constructor:messagebus.UnixSocketClientConfig)
}

void UnixSocketClientConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnixSocketClientConfig_message_5fbus_5fconfig_2eproto.base);
  socket_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  agent_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnixSocketClientConfig::~UnixSocketClientConfig() {
  // @@protoc_insertion_point(destructor:messagebus.UnixSocketClientConfig)
  SharedDtor();
}

void UnixSocketClientConfig::SharedDtor() {
  socket_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  agent_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnixSocketClientConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnixSocketClientConfig& UnixSocketClientConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnixSocketClientConfig_message_5fbus_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void UnixSocketClientConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:messagebus.UnixSocketClientConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  socket_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  agent_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* UnixSocketClientConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string socket_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_socket_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messagebus.UnixSocketClientConfig.socket_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string agent_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_agent_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messagebus.UnixSocketClientConfig.agent_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnixSocketClientConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messagebus.UnixSocketClientConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string socket_path = 1;
  if (this->socket_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_socket_path().data(), static_cast<int>(this->_internal_socket_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messagebus.UnixSocketClientConfig.socket_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_socket_path(), target);
  }

  // string agent_name = 2;
  if (this->agent_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_name().data(), static_cast<int>(this->_internal_agent_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messagebus.UnixSocketClientConfig.agent_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_agent_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messagebus.UnixSocketClientConfig)
  return target;
}

size_t UnixSocketClientConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messagebus.UnixSocketClientConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string socket_path = 1;
  if (this->socket_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_socket_path());
  }

  // string agent_name = 2;
  if (this->agent_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnixSocketClientConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messagebus.UnixSocketClientConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const UnixSocketClientConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnixSocketClientConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messagebus.UnixSocketClientConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messagebus.UnixSocketClientConfig)
    MergeFrom(*source);
  }
}

void UnixSocketClientConfig::MergeFrom(const UnixSocketClientConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messagebus.UnixSocketClientConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.socket_path().size() > 0) {

    socket_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.socket_path_);
  }
  if (from.agent_name().size() > 0) {

    agent_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.agent_name_);
  }
}

void UnixSocketClientConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messagebus.UnixSocketClientConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnixSocketClientConfig::CopyFrom(const UnixSocketClientConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messagebus.UnixSocketClientConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnixSocketClientConfig::IsInitialized() const {
  return true;
}

void UnixSocketClientConfig::InternalSwap(UnixSocketClientConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  socket_path_.Swap(&other->socket_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  agent_name_.Swap(&other->agent_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnixSocketClientConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MessageBusConfig::InitAsDefaultInstance() {
  ::messagebus::_MessageBusConfig_default_instance_.malamute_client_config_ = const_cast< ::messagebus::MalamuteClientConfig*>(
      ::messagebus::MalamuteClientConfig::internal_default_instance());
  ::messagebus::_MessageBusConfig_default_instance_.unix_client_config_ = const_cast< ::messagebus::UnixSocketClientConfig*>(
      ::messagebus::UnixSocketClientConfig::internal_default_instance());
}
class MessageBusConfig::_Internal {
 public:
  static const ::messagebus::MalamuteClientConfig& malamute_client_config(const MessageBusConfig* msg);
  static const ::messagebus::UnixSocketClientConfig& unix_client_config(const MessageBusConfig* msg);
};

const ::messagebus::MalamuteClientConfig&
MessageBusConfig::_Internal::malamute_client_config(const MessageBusConfig* msg) {
  return *msg->parameters_.malamute_client_config_;
}
const ::messagebus::UnixSocketClientConfig&
MessageBusConfig::_Internal::unix_client_config(const MessageBusConfig* msg) {
  return *msg->parameters_.unix_client_config_;
}
void MessageBusConfig::set_allocated_malamute_client_config(::messagebus::MalamuteClientConfig* malamute_client_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (malamute_client_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      malamute_client_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, malamute_client_config, submessage_arena);
    }
    set_has_malamute_client_config();
    parameters_.malamute_client_config_ = malamute_client_config;
  }
  // @@protoc_insertion_point(field_set_allocated:messagebus.MessageBusConfig.malamute_client_config)
}
void MessageBusConfig::set_allocated_unix_client_config(::messagebus::UnixSocketClientConfig* unix_client_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (unix_client_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      unix_client_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unix_client_config, submessage_arena);
    }
    set_has_unix_client_config();
    parameters_.unix_client_config_ = unix_client_config;
  }
  // @@protoc_insertion_point(field_set_allocated:messagebus.MessageBusConfig.unix_client_config)
}
MessageBusConfig::MessageBusConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:messagebus.MessageBusConfig)
}
MessageBusConfig::MessageBusConfig(const MessageBusConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  queue_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_queue_name().empty()) {
    queue_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.queue_name_);
  }
  clear_has_parameters();
  switch (from.parameters_case()) {
    case kMalamuteClientConfig: {
      _internal_mutable_malamute_client_config()->::messagebus::MalamuteClientConfig::MergeFrom(from._internal_malamute_client_config());
      break;
    }
    case kUnixClientConfig: {
      _internal_mutable_unix_client_config()->::messagebus::UnixSocketClientConfig::MergeFrom(from._internal_unix_client_config());
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:messagebus.MessageBusConfig)
}

void MessageBusConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MessageBusConfig_message_5fbus_5fconfig_2eproto.base);
  queue_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_parameters();
}

MessageBusConfig::~MessageBusConfig() {
  // @@protoc_insertion_point(destructor:messagebus.MessageBusConfig)
  SharedDtor();
}

void MessageBusConfig::SharedDtor() {
  queue_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_parameters()) {
    clear_parameters();
  }
}

void MessageBusConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageBusConfig& MessageBusConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessageBusConfig_message_5fbus_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void MessageBusConfig::clear_parameters() {
// @@protoc_insertion_point(one_of_clear_start:messagebus.MessageBusConfig)
  switch (parameters_case()) {
    case kMalamuteClientConfig: {
      delete parameters_.malamute_client_config_;
      break;
    }
    case kUnixClientConfig: {
      delete parameters_.unix_client_config_;
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETERS_NOT_SET;
}


void MessageBusConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:messagebus.MessageBusConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  queue_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_parameters();
  _internal_metadata_.Clear();
}

const char* MessageBusConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string queue_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_queue_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "messagebus.MessageBusConfig.queue_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .messagebus.MalamuteClientConfig malamute_client_config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_malamute_client_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .messagebus.UnixSocketClientConfig unix_client_config = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_unix_client_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageBusConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messagebus.MessageBusConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string queue_name = 1;
  if (this->queue_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_queue_name().data(), static_cast<int>(this->_internal_queue_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "messagebus.MessageBusConfig.queue_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_queue_name(), target);
  }

  // .messagebus.MalamuteClientConfig malamute_client_config = 2;
  if (_internal_has_malamute_client_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::malamute_client_config(this), target, stream);
  }

  // .messagebus.UnixSocketClientConfig unix_client_config = 3;
  if (_internal_has_unix_client_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::unix_client_config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messagebus.MessageBusConfig)
  return target;
}

size_t MessageBusConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messagebus.MessageBusConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string queue_name = 1;
  if (this->queue_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_queue_name());
  }

  switch (parameters_case()) {
    // .messagebus.MalamuteClientConfig malamute_client_config = 2;
    case kMalamuteClientConfig: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *parameters_.malamute_client_config_);
      break;
    }
    // .messagebus.UnixSocketClientConfig unix_client_config = 3;
    case kUnixClientConfig: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *parameters_.unix_client_config_);
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageBusConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:messagebus.MessageBusConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageBusConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageBusConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:messagebus.MessageBusConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:messagebus.MessageBusConfig)
    MergeFrom(*source);
  }
}

void MessageBusConfig::MergeFrom(const MessageBusConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messagebus.MessageBusConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.queue_name().size() > 0) {

    queue_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.queue_name_);
  }
  switch (from.parameters_case()) {
    case kMalamuteClientConfig: {
      _internal_mutable_malamute_client_config()->::messagebus::MalamuteClientConfig::MergeFrom(from._internal_malamute_client_config());
      break;
    }
    case kUnixClientConfig: {
      _internal_mutable_unix_client_config()->::messagebus::UnixSocketClientConfig::MergeFrom(from._internal_unix_client_config());
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
}

void MessageBusConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:messagebus.MessageBusConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageBusConfig::CopyFrom(const MessageBusConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messagebus.MessageBusConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageBusConfig::IsInitialized() const {
  return true;
}

void MessageBusConfig::InternalSwap(MessageBusConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  queue_name_.Swap(&other->queue_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(parameters_, other->parameters_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageBusConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace messagebus
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::messagebus::MalamuteClientConfig* Arena::CreateMaybeMessage< ::messagebus::MalamuteClientConfig >(Arena* arena) {
  return Arena::CreateInternal< ::messagebus::MalamuteClientConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::messagebus::UnixSocketClientConfig* Arena::CreateMaybeMessage< ::messagebus::UnixSocketClientConfig >(Arena* arena) {
  return Arena::CreateInternal< ::messagebus::UnixSocketClientConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::messagebus::MessageBusConfig* Arena::CreateMaybeMessage< ::messagebus::MessageBusConfig >(Arena* arena) {
  return Arena::CreateInternal< ::messagebus::MessageBusConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

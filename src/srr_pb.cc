// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: srr.proto

#include "srr_pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_srr_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Feature;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FeatureDependencies;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FeatureStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFeatureQuery;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResetQuery;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SaveQuery;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ListFeatureResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ResetResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ResetResponse_MapFeaturesStatusEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RestoreQuery;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RestoreQuery_MapFeaturesDataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RestoreResponse_MapFeaturesStatusEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SaveResponse_MapFeaturesDataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_FeatureAndStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RestoreResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_srr_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SaveResponse;
}  // namespace protobuf_srr_2eproto
namespace dto {
namespace srr {
class FeatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Feature>
      _instance;
} _Feature_default_instance_;
class FeatureStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FeatureStatus>
      _instance;
} _FeatureStatus_default_instance_;
class SaveQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SaveQuery>
      _instance;
} _SaveQuery_default_instance_;
class RestoreQuery_MapFeaturesDataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RestoreQuery_MapFeaturesDataEntry_DoNotUse>
      _instance;
} _RestoreQuery_MapFeaturesDataEntry_DoNotUse_default_instance_;
class RestoreQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RestoreQuery>
      _instance;
} _RestoreQuery_default_instance_;
class ResetQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetQuery>
      _instance;
} _ResetQuery_default_instance_;
class ListFeatureQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFeatureQuery>
      _instance;
} _ListFeatureQuery_default_instance_;
class QueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Query>
      _instance;
  const ::dto::srr::SaveQuery* save_;
  const ::dto::srr::RestoreQuery* restore_;
  const ::dto::srr::ResetQuery* reset_;
  const ::dto::srr::ListFeatureQuery* list_feature_;
} _Query_default_instance_;
class FeatureAndStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FeatureAndStatus>
      _instance;
} _FeatureAndStatus_default_instance_;
class SaveResponse_MapFeaturesDataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SaveResponse_MapFeaturesDataEntry_DoNotUse>
      _instance;
} _SaveResponse_MapFeaturesDataEntry_DoNotUse_default_instance_;
class SaveResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SaveResponse>
      _instance;
} _SaveResponse_default_instance_;
class RestoreResponse_MapFeaturesStatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RestoreResponse_MapFeaturesStatusEntry_DoNotUse>
      _instance;
} _RestoreResponse_MapFeaturesStatusEntry_DoNotUse_default_instance_;
class RestoreResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RestoreResponse>
      _instance;
} _RestoreResponse_default_instance_;
class ResetResponse_MapFeaturesStatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetResponse_MapFeaturesStatusEntry_DoNotUse>
      _instance;
} _ResetResponse_MapFeaturesStatusEntry_DoNotUse_default_instance_;
class ResetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetResponse>
      _instance;
} _ResetResponse_default_instance_;
class FeatureDependenciesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FeatureDependencies>
      _instance;
} _FeatureDependencies_default_instance_;
class ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse>
      _instance;
} _ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse_default_instance_;
class ListFeatureResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFeatureResponse>
      _instance;
} _ListFeatureResponse_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
  const ::dto::srr::SaveResponse* save_;
  const ::dto::srr::RestoreResponse* restore_;
  const ::dto::srr::ResetResponse* reset_;
  const ::dto::srr::ListFeatureResponse* list_feature_;
} _Response_default_instance_;
}  // namespace srr
}  // namespace dto
namespace protobuf_srr_2eproto {
static void InitDefaultsFeature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_Feature_default_instance_;
    new (ptr) ::dto::srr::Feature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::Feature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Feature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFeature}, {}};

static void InitDefaultsFeatureStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_FeatureStatus_default_instance_;
    new (ptr) ::dto::srr::FeatureStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::FeatureStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FeatureStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFeatureStatus}, {}};

static void InitDefaultsSaveQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_SaveQuery_default_instance_;
    new (ptr) ::dto::srr::SaveQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::SaveQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SaveQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSaveQuery}, {}};

static void InitDefaultsRestoreQuery_MapFeaturesDataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_RestoreQuery_MapFeaturesDataEntry_DoNotUse_default_instance_;
    new (ptr) ::dto::srr::RestoreQuery_MapFeaturesDataEntry_DoNotUse();
  }
  ::dto::srr::RestoreQuery_MapFeaturesDataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RestoreQuery_MapFeaturesDataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRestoreQuery_MapFeaturesDataEntry_DoNotUse}, {
      &protobuf_srr_2eproto::scc_info_Feature.base,}};

static void InitDefaultsRestoreQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_RestoreQuery_default_instance_;
    new (ptr) ::dto::srr::RestoreQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::RestoreQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RestoreQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRestoreQuery}, {
      &protobuf_srr_2eproto::scc_info_RestoreQuery_MapFeaturesDataEntry_DoNotUse.base,}};

static void InitDefaultsResetQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_ResetQuery_default_instance_;
    new (ptr) ::dto::srr::ResetQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::ResetQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResetQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResetQuery}, {}};

static void InitDefaultsListFeatureQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_ListFeatureQuery_default_instance_;
    new (ptr) ::dto::srr::ListFeatureQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::ListFeatureQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFeatureQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFeatureQuery}, {}};

static void InitDefaultsQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_Query_default_instance_;
    new (ptr) ::dto::srr::Query();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::Query::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Query =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsQuery}, {
      &protobuf_srr_2eproto::scc_info_SaveQuery.base,
      &protobuf_srr_2eproto::scc_info_RestoreQuery.base,
      &protobuf_srr_2eproto::scc_info_ResetQuery.base,
      &protobuf_srr_2eproto::scc_info_ListFeatureQuery.base,}};

static void InitDefaultsFeatureAndStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_FeatureAndStatus_default_instance_;
    new (ptr) ::dto::srr::FeatureAndStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::FeatureAndStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_FeatureAndStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFeatureAndStatus}, {
      &protobuf_srr_2eproto::scc_info_FeatureStatus.base,
      &protobuf_srr_2eproto::scc_info_Feature.base,}};

static void InitDefaultsSaveResponse_MapFeaturesDataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_SaveResponse_MapFeaturesDataEntry_DoNotUse_default_instance_;
    new (ptr) ::dto::srr::SaveResponse_MapFeaturesDataEntry_DoNotUse();
  }
  ::dto::srr::SaveResponse_MapFeaturesDataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SaveResponse_MapFeaturesDataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSaveResponse_MapFeaturesDataEntry_DoNotUse}, {
      &protobuf_srr_2eproto::scc_info_FeatureAndStatus.base,}};

static void InitDefaultsSaveResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_SaveResponse_default_instance_;
    new (ptr) ::dto::srr::SaveResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::SaveResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SaveResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSaveResponse}, {
      &protobuf_srr_2eproto::scc_info_SaveResponse_MapFeaturesDataEntry_DoNotUse.base,
      &protobuf_srr_2eproto::scc_info_FeatureStatus.base,}};

static void InitDefaultsRestoreResponse_MapFeaturesStatusEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_RestoreResponse_MapFeaturesStatusEntry_DoNotUse_default_instance_;
    new (ptr) ::dto::srr::RestoreResponse_MapFeaturesStatusEntry_DoNotUse();
  }
  ::dto::srr::RestoreResponse_MapFeaturesStatusEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RestoreResponse_MapFeaturesStatusEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRestoreResponse_MapFeaturesStatusEntry_DoNotUse}, {
      &protobuf_srr_2eproto::scc_info_FeatureStatus.base,}};

static void InitDefaultsRestoreResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_RestoreResponse_default_instance_;
    new (ptr) ::dto::srr::RestoreResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::RestoreResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RestoreResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRestoreResponse}, {
      &protobuf_srr_2eproto::scc_info_RestoreResponse_MapFeaturesStatusEntry_DoNotUse.base,
      &protobuf_srr_2eproto::scc_info_FeatureStatus.base,}};

static void InitDefaultsResetResponse_MapFeaturesStatusEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_ResetResponse_MapFeaturesStatusEntry_DoNotUse_default_instance_;
    new (ptr) ::dto::srr::ResetResponse_MapFeaturesStatusEntry_DoNotUse();
  }
  ::dto::srr::ResetResponse_MapFeaturesStatusEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResetResponse_MapFeaturesStatusEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResetResponse_MapFeaturesStatusEntry_DoNotUse}, {
      &protobuf_srr_2eproto::scc_info_FeatureStatus.base,}};

static void InitDefaultsResetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_ResetResponse_default_instance_;
    new (ptr) ::dto::srr::ResetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::ResetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResetResponse}, {
      &protobuf_srr_2eproto::scc_info_ResetResponse_MapFeaturesStatusEntry_DoNotUse.base,}};

static void InitDefaultsFeatureDependencies() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_FeatureDependencies_default_instance_;
    new (ptr) ::dto::srr::FeatureDependencies();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::FeatureDependencies::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FeatureDependencies =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFeatureDependencies}, {}};

static void InitDefaultsListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse_default_instance_;
    new (ptr) ::dto::srr::ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse();
  }
  ::dto::srr::ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse}, {
      &protobuf_srr_2eproto::scc_info_FeatureDependencies.base,}};

static void InitDefaultsListFeatureResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_ListFeatureResponse_default_instance_;
    new (ptr) ::dto::srr::ListFeatureResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::ListFeatureResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListFeatureResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListFeatureResponse}, {
      &protobuf_srr_2eproto::scc_info_ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse.base,}};

static void InitDefaultsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dto::srr::_Response_default_instance_;
    new (ptr) ::dto::srr::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dto::srr::Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsResponse}, {
      &protobuf_srr_2eproto::scc_info_SaveResponse.base,
      &protobuf_srr_2eproto::scc_info_RestoreResponse.base,
      &protobuf_srr_2eproto::scc_info_ResetResponse.base,
      &protobuf_srr_2eproto::scc_info_ListFeatureResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Feature.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FeatureStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SaveQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RestoreQuery_MapFeaturesDataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RestoreQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFeatureQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Query.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FeatureAndStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SaveResponse_MapFeaturesDataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SaveResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RestoreResponse_MapFeaturesStatusEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RestoreResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetResponse_MapFeaturesStatusEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FeatureDependencies.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFeatureResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response.base);
}

::google::protobuf::Metadata file_level_metadata[19];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::Feature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::Feature, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::Feature, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::FeatureStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::FeatureStatus, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::FeatureStatus, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::SaveQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::SaveQuery, features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::SaveQuery, passpharse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreQuery_MapFeaturesDataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreQuery_MapFeaturesDataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreQuery_MapFeaturesDataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreQuery_MapFeaturesDataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreQuery, map_features_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreQuery, passpharse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreQuery, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreQuery, checksum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ResetQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ResetQuery, features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ResetQuery, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ListFeatureQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::Query, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::Query, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::dto::srr::QueryDefaultTypeInternal, save_),
  offsetof(::dto::srr::QueryDefaultTypeInternal, restore_),
  offsetof(::dto::srr::QueryDefaultTypeInternal, reset_),
  offsetof(::dto::srr::QueryDefaultTypeInternal, list_feature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::Query, parameters_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::FeatureAndStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::FeatureAndStatus, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::FeatureAndStatus, feature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::SaveResponse_MapFeaturesDataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::SaveResponse_MapFeaturesDataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::SaveResponse_MapFeaturesDataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::SaveResponse_MapFeaturesDataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::SaveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::SaveResponse, map_features_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::SaveResponse, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::SaveResponse, checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::SaveResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreResponse_MapFeaturesStatusEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreResponse_MapFeaturesStatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreResponse_MapFeaturesStatusEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreResponse_MapFeaturesStatusEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreResponse, map_features_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::RestoreResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ResetResponse_MapFeaturesStatusEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ResetResponse_MapFeaturesStatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ResetResponse_MapFeaturesStatusEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ResetResponse_MapFeaturesStatusEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ResetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ResetResponse, map_features_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::FeatureDependencies, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::FeatureDependencies, dependencies_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::FeatureDependencies, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ListFeatureResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ListFeatureResponse, map_features_dependencies_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ListFeatureResponse, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ListFeatureResponse, passphrass_definition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::ListFeatureResponse, passphrass_description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::Response, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::dto::srr::ResponseDefaultTypeInternal, save_),
  offsetof(::dto::srr::ResponseDefaultTypeInternal, restore_),
  offsetof(::dto::srr::ResponseDefaultTypeInternal, reset_),
  offsetof(::dto::srr::ResponseDefaultTypeInternal, list_feature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dto::srr::Response, parameters_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dto::srr::Feature)},
  { 7, -1, sizeof(::dto::srr::FeatureStatus)},
  { 14, -1, sizeof(::dto::srr::SaveQuery)},
  { 21, 28, sizeof(::dto::srr::RestoreQuery_MapFeaturesDataEntry_DoNotUse)},
  { 30, -1, sizeof(::dto::srr::RestoreQuery)},
  { 39, -1, sizeof(::dto::srr::ResetQuery)},
  { 46, -1, sizeof(::dto::srr::ListFeatureQuery)},
  { 51, -1, sizeof(::dto::srr::Query)},
  { 61, -1, sizeof(::dto::srr::FeatureAndStatus)},
  { 68, 75, sizeof(::dto::srr::SaveResponse_MapFeaturesDataEntry_DoNotUse)},
  { 77, -1, sizeof(::dto::srr::SaveResponse)},
  { 86, 93, sizeof(::dto::srr::RestoreResponse_MapFeaturesStatusEntry_DoNotUse)},
  { 95, -1, sizeof(::dto::srr::RestoreResponse)},
  { 102, 109, sizeof(::dto::srr::ResetResponse_MapFeaturesStatusEntry_DoNotUse)},
  { 111, -1, sizeof(::dto::srr::ResetResponse)},
  { 117, -1, sizeof(::dto::srr::FeatureDependencies)},
  { 124, 131, sizeof(::dto::srr::ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse)},
  { 133, -1, sizeof(::dto::srr::ListFeatureResponse)},
  { 142, -1, sizeof(::dto::srr::Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_Feature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_FeatureStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_SaveQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_RestoreQuery_MapFeaturesDataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_RestoreQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_ResetQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_ListFeatureQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_Query_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_FeatureAndStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_SaveResponse_MapFeaturesDataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_SaveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_RestoreResponse_MapFeaturesStatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_RestoreResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_ResetResponse_MapFeaturesStatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_ResetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_FeatureDependencies_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_ListFeatureResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dto::srr::_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "srr.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 19);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tsrr.proto\022\007dto.srr\"(\n\007Feature\022\017\n\007versi"
      "on\030\001 \001(\t\022\014\n\004data\030\002 \001(\t\"\?\n\rFeatureStatus\022"
      "\037\n\006status\030\001 \001(\0162\017.dto.srr.Status\022\r\n\005erro"
      "r\030\002 \001(\t\"1\n\tSaveQuery\022\020\n\010features\030\001 \003(\t\022\022"
      "\n\npasspharse\030\002 \001(\t\"\326\001\n\014RestoreQuery\022E\n\021m"
      "ap_features_data\030\001 \003(\0132*.dto.srr.Restore"
      "Query.MapFeaturesDataEntry\022\022\n\npasspharse"
      "\030\002 \001(\t\022\017\n\007version\030\003 \001(\t\022\020\n\010checksum\030\004 \001("
      "\t\032H\n\024MapFeaturesDataEntry\022\013\n\003key\030\001 \001(\t\022\037"
      "\n\005value\030\002 \001(\0132\020.dto.srr.Feature:\0028\001\"/\n\nR"
      "esetQuery\022\020\n\010features\030\001 \003(\t\022\017\n\007version\030\002"
      " \001(\t\"\022\n\020ListFeatureQuery\"\274\001\n\005Query\022\"\n\004sa"
      "ve\030\001 \001(\0132\022.dto.srr.SaveQueryH\000\022(\n\007restor"
      "e\030\002 \001(\0132\025.dto.srr.RestoreQueryH\000\022$\n\005rese"
      "t\030\003 \001(\0132\023.dto.srr.ResetQueryH\000\0221\n\014list_f"
      "eature\030\004 \001(\0132\031.dto.srr.ListFeatureQueryH"
      "\000B\014\n\nparameters\"]\n\020FeatureAndStatus\022&\n\006s"
      "tatus\030\001 \001(\0132\026.dto.srr.FeatureStatus\022!\n\007f"
      "eature\030\002 \001(\0132\020.dto.srr.Feature\"\363\001\n\014SaveR"
      "esponse\022E\n\021map_features_data\030\001 \003(\0132*.dto"
      ".srr.SaveResponse.MapFeaturesDataEntry\022\017"
      "\n\007version\030\002 \001(\t\022\020\n\010checksum\030\003 \001(\t\022&\n\006sta"
      "tus\030\004 \001(\0132\026.dto.srr.FeatureStatus\032Q\n\024Map"
      "FeaturesDataEntry\022\013\n\003key\030\001 \001(\t\022(\n\005value\030"
      "\002 \001(\0132\031.dto.srr.FeatureAndStatus:\0028\001\"\331\001\n"
      "\017RestoreResponse\022L\n\023map_features_status\030"
      "\001 \003(\0132/.dto.srr.RestoreResponse.MapFeatu"
      "resStatusEntry\022&\n\006status\030\002 \001(\0132\026.dto.srr"
      ".FeatureStatus\032P\n\026MapFeaturesStatusEntry"
      "\022\013\n\003key\030\001 \001(\t\022%\n\005value\030\002 \001(\0132\026.dto.srr.F"
      "eatureStatus:\0028\001\"\255\001\n\rResetResponse\022J\n\023ma"
      "p_features_status\030\001 \003(\0132-.dto.srr.ResetR"
      "esponse.MapFeaturesStatusEntry\032P\n\026MapFea"
      "turesStatusEntry\022\013\n\003key\030\001 \001(\t\022%\n\005value\030\002"
      " \001(\0132\026.dto.srr.FeatureStatus:\0028\001\"@\n\023Feat"
      "ureDependencies\022\024\n\014dependencies\030\001 \003(\t\022\023\n"
      "\013description\030\002 \001(\t\"\241\002\n\023ListFeatureRespon"
      "se\022\\\n\031map_features_dependencies\030\001 \003(\01329."
      "dto.srr.ListFeatureResponse.MapFeaturesD"
      "ependenciesEntry\022\017\n\007version\030\002 \001(\t\022\035\n\025pas"
      "sphrass_definition\030\003 \001(\t\022\036\n\026passphrass_d"
      "escription\030\004 \001(\t\032\\\n\034MapFeaturesDependenc"
      "iesEntry\022\013\n\003key\030\001 \001(\t\022+\n\005value\030\002 \001(\0132\034.d"
      "to.srr.FeatureDependencies:\0028\001\"\313\001\n\010Respo"
      "nse\022%\n\004save\030\001 \001(\0132\025.dto.srr.SaveResponse"
      "H\000\022+\n\007restore\030\002 \001(\0132\030.dto.srr.RestoreRes"
      "ponseH\000\022\'\n\005reset\030\003 \001(\0132\026.dto.srr.ResetRe"
      "sponseH\000\0224\n\014list_feature\030\004 \001(\0132\034.dto.srr"
      ".ListFeatureResponseH\000B\014\n\nparameters*C\n\006"
      "Status\022\013\n\007UNKNOWN\020\000\022\013\n\007SUCCESS\020\001\022\n\n\006FAIL"
      "ED\020\002\022\023\n\017PARTIAL_SUCCESS\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2033);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "srr.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_srr_2eproto
namespace dto {
namespace srr {
const ::google::protobuf::EnumDescriptor* Status_descriptor() {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_srr_2eproto::file_level_enum_descriptors[0];
}
bool Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Feature::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Feature::kVersionFieldNumber;
const int Feature::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Feature::Feature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_Feature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.Feature)
}
Feature::Feature(const Feature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:dto.srr.Feature)
}

void Feature::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Feature::~Feature() {
  // @@protoc_insertion_point(destructor:dto.srr.Feature)
  SharedDtor();
}

void Feature::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Feature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Feature::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Feature& Feature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_Feature.base);
  return *internal_default_instance();
}


void Feature::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.Feature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Feature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.Feature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.Feature.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.Feature.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.Feature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.Feature)
  return false;
#undef DO_
}

void Feature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.Feature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.Feature.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.Feature.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.Feature)
}

::google::protobuf::uint8* Feature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.Feature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.Feature.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.Feature.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.Feature)
  return target;
}

size_t Feature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.Feature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Feature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.Feature)
  GOOGLE_DCHECK_NE(&from, this);
  const Feature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Feature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.Feature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.Feature)
    MergeFrom(*source);
  }
}

void Feature::MergeFrom(const Feature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.Feature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void Feature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Feature::CopyFrom(const Feature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Feature::IsInitialized() const {
  return true;
}

void Feature::Swap(Feature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Feature::InternalSwap(Feature* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Feature::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FeatureStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FeatureStatus::kStatusFieldNumber;
const int FeatureStatus::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeatureStatus::FeatureStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_FeatureStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.FeatureStatus)
}
FeatureStatus::FeatureStatus(const FeatureStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:dto.srr.FeatureStatus)
}

void FeatureStatus::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

FeatureStatus::~FeatureStatus() {
  // @@protoc_insertion_point(destructor:dto.srr.FeatureStatus)
  SharedDtor();
}

void FeatureStatus::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FeatureStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FeatureStatus::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FeatureStatus& FeatureStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_FeatureStatus.base);
  return *internal_default_instance();
}


void FeatureStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.FeatureStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _internal_metadata_.Clear();
}

bool FeatureStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.FeatureStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dto.srr.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::dto::srr::Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.FeatureStatus.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.FeatureStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.FeatureStatus)
  return false;
#undef DO_
}

void FeatureStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.FeatureStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dto.srr.Status status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.FeatureStatus.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.FeatureStatus)
}

::google::protobuf::uint8* FeatureStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.FeatureStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dto.srr.Status status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.FeatureStatus.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.FeatureStatus)
  return target;
}

size_t FeatureStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.FeatureStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .dto.srr.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FeatureStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.FeatureStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const FeatureStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FeatureStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.FeatureStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.FeatureStatus)
    MergeFrom(*source);
  }
}

void FeatureStatus::MergeFrom(const FeatureStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.FeatureStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void FeatureStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.FeatureStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeatureStatus::CopyFrom(const FeatureStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.FeatureStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureStatus::IsInitialized() const {
  return true;
}

void FeatureStatus::Swap(FeatureStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeatureStatus::InternalSwap(FeatureStatus* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FeatureStatus::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SaveQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveQuery::kFeaturesFieldNumber;
const int SaveQuery::kPasspharseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveQuery::SaveQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_SaveQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.SaveQuery)
}
SaveQuery::SaveQuery(const SaveQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      features_(from.features_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  passpharse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passpharse().size() > 0) {
    passpharse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passpharse_);
  }
  // @@protoc_insertion_point(copy_constructor:dto.srr.SaveQuery)
}

void SaveQuery::SharedCtor() {
  passpharse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SaveQuery::~SaveQuery() {
  // @@protoc_insertion_point(destructor:dto.srr.SaveQuery)
  SharedDtor();
}

void SaveQuery::SharedDtor() {
  passpharse_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SaveQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SaveQuery::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SaveQuery& SaveQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_SaveQuery.base);
  return *internal_default_instance();
}


void SaveQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.SaveQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  passpharse_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SaveQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.SaveQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string features = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_features()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->features(this->features_size() - 1).data(),
            static_cast<int>(this->features(this->features_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.SaveQuery.features"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string passpharse = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passpharse()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passpharse().data(), static_cast<int>(this->passpharse().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.SaveQuery.passpharse"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.SaveQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.SaveQuery)
  return false;
#undef DO_
}

void SaveQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.SaveQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string features = 1;
  for (int i = 0, n = this->features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->features(i).data(), static_cast<int>(this->features(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.SaveQuery.features");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->features(i), output);
  }

  // string passpharse = 2;
  if (this->passpharse().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passpharse().data(), static_cast<int>(this->passpharse().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.SaveQuery.passpharse");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passpharse(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.SaveQuery)
}

::google::protobuf::uint8* SaveQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.SaveQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string features = 1;
  for (int i = 0, n = this->features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->features(i).data(), static_cast<int>(this->features(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.SaveQuery.features");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->features(i), target);
  }

  // string passpharse = 2;
  if (this->passpharse().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passpharse().data(), static_cast<int>(this->passpharse().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.SaveQuery.passpharse");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passpharse(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.SaveQuery)
  return target;
}

size_t SaveQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.SaveQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string features = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->features_size());
  for (int i = 0, n = this->features_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->features(i));
  }

  // string passpharse = 2;
  if (this->passpharse().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passpharse());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.SaveQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.SaveQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.SaveQuery)
    MergeFrom(*source);
  }
}

void SaveQuery::MergeFrom(const SaveQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.SaveQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
  if (from.passpharse().size() > 0) {

    passpharse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passpharse_);
  }
}

void SaveQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.SaveQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveQuery::CopyFrom(const SaveQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.SaveQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveQuery::IsInitialized() const {
  return true;
}

void SaveQuery::Swap(SaveQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveQuery::InternalSwap(SaveQuery* other) {
  using std::swap;
  features_.InternalSwap(CastToBase(&other->features_));
  passpharse_.Swap(&other->passpharse_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SaveQuery::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

RestoreQuery_MapFeaturesDataEntry_DoNotUse::RestoreQuery_MapFeaturesDataEntry_DoNotUse() {}
RestoreQuery_MapFeaturesDataEntry_DoNotUse::RestoreQuery_MapFeaturesDataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RestoreQuery_MapFeaturesDataEntry_DoNotUse::MergeFrom(const RestoreQuery_MapFeaturesDataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RestoreQuery_MapFeaturesDataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[3];
}
void RestoreQuery_MapFeaturesDataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void RestoreQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestoreQuery::kMapFeaturesDataFieldNumber;
const int RestoreQuery::kPasspharseFieldNumber;
const int RestoreQuery::kVersionFieldNumber;
const int RestoreQuery::kChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestoreQuery::RestoreQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_RestoreQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.RestoreQuery)
}
RestoreQuery::RestoreQuery(const RestoreQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_features_data_.MergeFrom(from.map_features_data_);
  passpharse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passpharse().size() > 0) {
    passpharse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passpharse_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.checksum().size() > 0) {
    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  // @@protoc_insertion_point(copy_constructor:dto.srr.RestoreQuery)
}

void RestoreQuery::SharedCtor() {
  passpharse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RestoreQuery::~RestoreQuery() {
  // @@protoc_insertion_point(destructor:dto.srr.RestoreQuery)
  SharedDtor();
}

void RestoreQuery::SharedDtor() {
  passpharse_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RestoreQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RestoreQuery::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RestoreQuery& RestoreQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_RestoreQuery.base);
  return *internal_default_instance();
}


void RestoreQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.RestoreQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_features_data_.Clear();
  passpharse_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RestoreQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.RestoreQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .dto.srr.Feature> map_features_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          RestoreQuery_MapFeaturesDataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RestoreQuery_MapFeaturesDataEntry_DoNotUse,
              ::std::string, ::dto::srr::Feature,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::dto::srr::Feature > > parser(&map_features_data_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.RestoreQuery.MapFeaturesDataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string passpharse = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passpharse()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passpharse().data(), static_cast<int>(this->passpharse().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.RestoreQuery.passpharse"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.RestoreQuery.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string checksum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_checksum()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->checksum().data(), static_cast<int>(this->checksum().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.RestoreQuery.checksum"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.RestoreQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.RestoreQuery)
  return false;
#undef DO_
}

void RestoreQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.RestoreQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dto.srr.Feature> map_features_data = 1;
  if (!this->map_features_data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dto::srr::Feature >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dto.srr.RestoreQuery.MapFeaturesDataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_features_data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_features_data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dto::srr::Feature >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::Feature >::const_iterator
          it = this->map_features_data().begin();
          it != this->map_features_data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RestoreQuery_MapFeaturesDataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_features_data_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RestoreQuery_MapFeaturesDataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::Feature >::const_iterator
          it = this->map_features_data().begin();
          it != this->map_features_data().end(); ++it) {
        entry.reset(map_features_data_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string passpharse = 2;
  if (this->passpharse().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passpharse().data(), static_cast<int>(this->passpharse().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.RestoreQuery.passpharse");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passpharse(), output);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.RestoreQuery.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // string checksum = 4;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum().data(), static_cast<int>(this->checksum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.RestoreQuery.checksum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->checksum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.RestoreQuery)
}

::google::protobuf::uint8* RestoreQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.RestoreQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dto.srr.Feature> map_features_data = 1;
  if (!this->map_features_data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dto::srr::Feature >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dto.srr.RestoreQuery.MapFeaturesDataEntry.key");
      }
    };

    if (deterministic &&
        this->map_features_data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_features_data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dto::srr::Feature >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::Feature >::const_iterator
          it = this->map_features_data().begin();
          it != this->map_features_data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RestoreQuery_MapFeaturesDataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_features_data_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RestoreQuery_MapFeaturesDataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::Feature >::const_iterator
          it = this->map_features_data().begin();
          it != this->map_features_data().end(); ++it) {
        entry.reset(map_features_data_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string passpharse = 2;
  if (this->passpharse().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passpharse().data(), static_cast<int>(this->passpharse().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.RestoreQuery.passpharse");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passpharse(), target);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.RestoreQuery.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // string checksum = 4;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum().data(), static_cast<int>(this->checksum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.RestoreQuery.checksum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->checksum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.RestoreQuery)
  return target;
}

size_t RestoreQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.RestoreQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .dto.srr.Feature> map_features_data = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_features_data_size());
  {
    ::std::unique_ptr<RestoreQuery_MapFeaturesDataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::dto::srr::Feature >::const_iterator
        it = this->map_features_data().begin();
        it != this->map_features_data().end(); ++it) {
      entry.reset(map_features_data_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string passpharse = 2;
  if (this->passpharse().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passpharse());
  }

  // string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string checksum = 4;
  if (this->checksum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->checksum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RestoreQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.RestoreQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const RestoreQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestoreQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.RestoreQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.RestoreQuery)
    MergeFrom(*source);
  }
}

void RestoreQuery::MergeFrom(const RestoreQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.RestoreQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_features_data_.MergeFrom(from.map_features_data_);
  if (from.passpharse().size() > 0) {

    passpharse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passpharse_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.checksum().size() > 0) {

    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
}

void RestoreQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.RestoreQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestoreQuery::CopyFrom(const RestoreQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.RestoreQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestoreQuery::IsInitialized() const {
  return true;
}

void RestoreQuery::Swap(RestoreQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestoreQuery::InternalSwap(RestoreQuery* other) {
  using std::swap;
  map_features_data_.Swap(&other->map_features_data_);
  passpharse_.Swap(&other->passpharse_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  checksum_.Swap(&other->checksum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RestoreQuery::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResetQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetQuery::kFeaturesFieldNumber;
const int ResetQuery::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetQuery::ResetQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_ResetQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.ResetQuery)
}
ResetQuery::ResetQuery(const ResetQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      features_(from.features_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  // @@protoc_insertion_point(copy_constructor:dto.srr.ResetQuery)
}

void ResetQuery::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ResetQuery::~ResetQuery() {
  // @@protoc_insertion_point(destructor:dto.srr.ResetQuery)
  SharedDtor();
}

void ResetQuery::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResetQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResetQuery::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetQuery& ResetQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_ResetQuery.base);
  return *internal_default_instance();
}


void ResetQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.ResetQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ResetQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.ResetQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string features = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_features()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->features(this->features_size() - 1).data(),
            static_cast<int>(this->features(this->features_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.ResetQuery.features"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.ResetQuery.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.ResetQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.ResetQuery)
  return false;
#undef DO_
}

void ResetQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.ResetQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string features = 1;
  for (int i = 0, n = this->features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->features(i).data(), static_cast<int>(this->features(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.ResetQuery.features");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->features(i), output);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.ResetQuery.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.ResetQuery)
}

::google::protobuf::uint8* ResetQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.ResetQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string features = 1;
  for (int i = 0, n = this->features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->features(i).data(), static_cast<int>(this->features(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.ResetQuery.features");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->features(i), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.ResetQuery.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.ResetQuery)
  return target;
}

size_t ResetQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.ResetQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string features = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->features_size());
  for (int i = 0, n = this->features_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->features(i));
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.ResetQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.ResetQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.ResetQuery)
    MergeFrom(*source);
  }
}

void ResetQuery::MergeFrom(const ResetQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.ResetQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void ResetQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.ResetQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetQuery::CopyFrom(const ResetQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.ResetQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetQuery::IsInitialized() const {
  return true;
}

void ResetQuery::Swap(ResetQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetQuery::InternalSwap(ResetQuery* other) {
  using std::swap;
  features_.InternalSwap(CastToBase(&other->features_));
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResetQuery::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFeatureQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFeatureQuery::ListFeatureQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_ListFeatureQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.ListFeatureQuery)
}
ListFeatureQuery::ListFeatureQuery(const ListFeatureQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dto.srr.ListFeatureQuery)
}

void ListFeatureQuery::SharedCtor() {
}

ListFeatureQuery::~ListFeatureQuery() {
  // @@protoc_insertion_point(destructor:dto.srr.ListFeatureQuery)
  SharedDtor();
}

void ListFeatureQuery::SharedDtor() {
}

void ListFeatureQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFeatureQuery::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFeatureQuery& ListFeatureQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_ListFeatureQuery.base);
  return *internal_default_instance();
}


void ListFeatureQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.ListFeatureQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ListFeatureQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.ListFeatureQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.ListFeatureQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.ListFeatureQuery)
  return false;
#undef DO_
}

void ListFeatureQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.ListFeatureQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.ListFeatureQuery)
}

::google::protobuf::uint8* ListFeatureQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.ListFeatureQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.ListFeatureQuery)
  return target;
}

size_t ListFeatureQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.ListFeatureQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFeatureQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.ListFeatureQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFeatureQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFeatureQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.ListFeatureQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.ListFeatureQuery)
    MergeFrom(*source);
  }
}

void ListFeatureQuery::MergeFrom(const ListFeatureQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.ListFeatureQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListFeatureQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.ListFeatureQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFeatureQuery::CopyFrom(const ListFeatureQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.ListFeatureQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFeatureQuery::IsInitialized() const {
  return true;
}

void ListFeatureQuery::Swap(ListFeatureQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFeatureQuery::InternalSwap(ListFeatureQuery* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFeatureQuery::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Query::InitAsDefaultInstance() {
  ::dto::srr::_Query_default_instance_.save_ = const_cast< ::dto::srr::SaveQuery*>(
      ::dto::srr::SaveQuery::internal_default_instance());
  ::dto::srr::_Query_default_instance_.restore_ = const_cast< ::dto::srr::RestoreQuery*>(
      ::dto::srr::RestoreQuery::internal_default_instance());
  ::dto::srr::_Query_default_instance_.reset_ = const_cast< ::dto::srr::ResetQuery*>(
      ::dto::srr::ResetQuery::internal_default_instance());
  ::dto::srr::_Query_default_instance_.list_feature_ = const_cast< ::dto::srr::ListFeatureQuery*>(
      ::dto::srr::ListFeatureQuery::internal_default_instance());
}
void Query::set_allocated_save(::dto::srr::SaveQuery* save) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (save) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      save = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, save, submessage_arena);
    }
    set_has_save();
    parameters_.save_ = save;
  }
  // @@protoc_insertion_point(field_set_allocated:dto.srr.Query.save)
}
void Query::set_allocated_restore(::dto::srr::RestoreQuery* restore) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (restore) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      restore = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, restore, submessage_arena);
    }
    set_has_restore();
    parameters_.restore_ = restore;
  }
  // @@protoc_insertion_point(field_set_allocated:dto.srr.Query.restore)
}
void Query::set_allocated_reset(::dto::srr::ResetQuery* reset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (reset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reset, submessage_arena);
    }
    set_has_reset();
    parameters_.reset_ = reset;
  }
  // @@protoc_insertion_point(field_set_allocated:dto.srr.Query.reset)
}
void Query::set_allocated_list_feature(::dto::srr::ListFeatureQuery* list_feature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (list_feature) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      list_feature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, list_feature, submessage_arena);
    }
    set_has_list_feature();
    parameters_.list_feature_ = list_feature;
  }
  // @@protoc_insertion_point(field_set_allocated:dto.srr.Query.list_feature)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Query::kSaveFieldNumber;
const int Query::kRestoreFieldNumber;
const int Query::kResetFieldNumber;
const int Query::kListFeatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Query::Query()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_Query.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.Query)
}
Query::Query(const Query& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_parameters();
  switch (from.parameters_case()) {
    case kSave: {
      mutable_save()->::dto::srr::SaveQuery::MergeFrom(from.save());
      break;
    }
    case kRestore: {
      mutable_restore()->::dto::srr::RestoreQuery::MergeFrom(from.restore());
      break;
    }
    case kReset: {
      mutable_reset()->::dto::srr::ResetQuery::MergeFrom(from.reset());
      break;
    }
    case kListFeature: {
      mutable_list_feature()->::dto::srr::ListFeatureQuery::MergeFrom(from.list_feature());
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:dto.srr.Query)
}

void Query::SharedCtor() {
  clear_has_parameters();
}

Query::~Query() {
  // @@protoc_insertion_point(destructor:dto.srr.Query)
  SharedDtor();
}

void Query::SharedDtor() {
  if (has_parameters()) {
    clear_parameters();
  }
}

void Query::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Query::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Query& Query::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_Query.base);
  return *internal_default_instance();
}


void Query::clear_parameters() {
// @@protoc_insertion_point(one_of_clear_start:dto.srr.Query)
  switch (parameters_case()) {
    case kSave: {
      delete parameters_.save_;
      break;
    }
    case kRestore: {
      delete parameters_.restore_;
      break;
    }
    case kReset: {
      delete parameters_.reset_;
      break;
    }
    case kListFeature: {
      delete parameters_.list_feature_;
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETERS_NOT_SET;
}


void Query::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_parameters();
  _internal_metadata_.Clear();
}

bool Query::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.Query)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dto.srr.SaveQuery save = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_save()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dto.srr.RestoreQuery restore = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_restore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dto.srr.ResetQuery reset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dto.srr.ListFeatureQuery list_feature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list_feature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.Query)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.Query)
  return false;
#undef DO_
}

void Query::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dto.srr.SaveQuery save = 1;
  if (has_save()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_save(), output);
  }

  // .dto.srr.RestoreQuery restore = 2;
  if (has_restore()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_restore(), output);
  }

  // .dto.srr.ResetQuery reset = 3;
  if (has_reset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_reset(), output);
  }

  // .dto.srr.ListFeatureQuery list_feature = 4;
  if (has_list_feature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_list_feature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.Query)
}

::google::protobuf::uint8* Query::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dto.srr.SaveQuery save = 1;
  if (has_save()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_save(), deterministic, target);
  }

  // .dto.srr.RestoreQuery restore = 2;
  if (has_restore()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_restore(), deterministic, target);
  }

  // .dto.srr.ResetQuery reset = 3;
  if (has_reset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_reset(), deterministic, target);
  }

  // .dto.srr.ListFeatureQuery list_feature = 4;
  if (has_list_feature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_list_feature(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.Query)
  return target;
}

size_t Query::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.Query)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (parameters_case()) {
    // .dto.srr.SaveQuery save = 1;
    case kSave: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.save_);
      break;
    }
    // .dto.srr.RestoreQuery restore = 2;
    case kRestore: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.restore_);
      break;
    }
    // .dto.srr.ResetQuery reset = 3;
    case kReset: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.reset_);
      break;
    }
    // .dto.srr.ListFeatureQuery list_feature = 4;
    case kListFeature: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.list_feature_);
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Query::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.Query)
  GOOGLE_DCHECK_NE(&from, this);
  const Query* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Query>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.Query)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.Query)
    MergeFrom(*source);
  }
}

void Query::MergeFrom(const Query& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.Query)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.parameters_case()) {
    case kSave: {
      mutable_save()->::dto::srr::SaveQuery::MergeFrom(from.save());
      break;
    }
    case kRestore: {
      mutable_restore()->::dto::srr::RestoreQuery::MergeFrom(from.restore());
      break;
    }
    case kReset: {
      mutable_reset()->::dto::srr::ResetQuery::MergeFrom(from.reset());
      break;
    }
    case kListFeature: {
      mutable_list_feature()->::dto::srr::ListFeatureQuery::MergeFrom(from.list_feature());
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
}

void Query::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Query::CopyFrom(const Query& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Query::IsInitialized() const {
  return true;
}

void Query::Swap(Query* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Query::InternalSwap(Query* other) {
  using std::swap;
  swap(parameters_, other->parameters_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Query::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FeatureAndStatus::InitAsDefaultInstance() {
  ::dto::srr::_FeatureAndStatus_default_instance_._instance.get_mutable()->status_ = const_cast< ::dto::srr::FeatureStatus*>(
      ::dto::srr::FeatureStatus::internal_default_instance());
  ::dto::srr::_FeatureAndStatus_default_instance_._instance.get_mutable()->feature_ = const_cast< ::dto::srr::Feature*>(
      ::dto::srr::Feature::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FeatureAndStatus::kStatusFieldNumber;
const int FeatureAndStatus::kFeatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeatureAndStatus::FeatureAndStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_FeatureAndStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.FeatureAndStatus)
}
FeatureAndStatus::FeatureAndStatus(const FeatureAndStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::dto::srr::FeatureStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_feature()) {
    feature_ = new ::dto::srr::Feature(*from.feature_);
  } else {
    feature_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dto.srr.FeatureAndStatus)
}

void FeatureAndStatus::SharedCtor() {
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&feature_) -
      reinterpret_cast<char*>(&status_)) + sizeof(feature_));
}

FeatureAndStatus::~FeatureAndStatus() {
  // @@protoc_insertion_point(destructor:dto.srr.FeatureAndStatus)
  SharedDtor();
}

void FeatureAndStatus::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete feature_;
}

void FeatureAndStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FeatureAndStatus::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FeatureAndStatus& FeatureAndStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_FeatureAndStatus.base);
  return *internal_default_instance();
}


void FeatureAndStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.FeatureAndStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && feature_ != NULL) {
    delete feature_;
  }
  feature_ = NULL;
  _internal_metadata_.Clear();
}

bool FeatureAndStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.FeatureAndStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dto.srr.FeatureStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dto.srr.Feature feature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_feature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.FeatureAndStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.FeatureAndStatus)
  return false;
#undef DO_
}

void FeatureAndStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.FeatureAndStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dto.srr.FeatureStatus status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  // .dto.srr.Feature feature = 2;
  if (this->has_feature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_feature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.FeatureAndStatus)
}

::google::protobuf::uint8* FeatureAndStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.FeatureAndStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dto.srr.FeatureStatus status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  // .dto.srr.Feature feature = 2;
  if (this->has_feature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_feature(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.FeatureAndStatus)
  return target;
}

size_t FeatureAndStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.FeatureAndStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .dto.srr.FeatureStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .dto.srr.Feature feature = 2;
  if (this->has_feature()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *feature_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FeatureAndStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.FeatureAndStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const FeatureAndStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FeatureAndStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.FeatureAndStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.FeatureAndStatus)
    MergeFrom(*source);
  }
}

void FeatureAndStatus::MergeFrom(const FeatureAndStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.FeatureAndStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::dto::srr::FeatureStatus::MergeFrom(from.status());
  }
  if (from.has_feature()) {
    mutable_feature()->::dto::srr::Feature::MergeFrom(from.feature());
  }
}

void FeatureAndStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.FeatureAndStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeatureAndStatus::CopyFrom(const FeatureAndStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.FeatureAndStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureAndStatus::IsInitialized() const {
  return true;
}

void FeatureAndStatus::Swap(FeatureAndStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeatureAndStatus::InternalSwap(FeatureAndStatus* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(feature_, other->feature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FeatureAndStatus::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

SaveResponse_MapFeaturesDataEntry_DoNotUse::SaveResponse_MapFeaturesDataEntry_DoNotUse() {}
SaveResponse_MapFeaturesDataEntry_DoNotUse::SaveResponse_MapFeaturesDataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void SaveResponse_MapFeaturesDataEntry_DoNotUse::MergeFrom(const SaveResponse_MapFeaturesDataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SaveResponse_MapFeaturesDataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[9];
}
void SaveResponse_MapFeaturesDataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void SaveResponse::InitAsDefaultInstance() {
  ::dto::srr::_SaveResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::dto::srr::FeatureStatus*>(
      ::dto::srr::FeatureStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveResponse::kMapFeaturesDataFieldNumber;
const int SaveResponse::kVersionFieldNumber;
const int SaveResponse::kChecksumFieldNumber;
const int SaveResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveResponse::SaveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_SaveResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.SaveResponse)
}
SaveResponse::SaveResponse(const SaveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_features_data_.MergeFrom(from.map_features_data_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.checksum().size() > 0) {
    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  if (from.has_status()) {
    status_ = new ::dto::srr::FeatureStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dto.srr.SaveResponse)
}

void SaveResponse::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = NULL;
}

SaveResponse::~SaveResponse() {
  // @@protoc_insertion_point(destructor:dto.srr.SaveResponse)
  SharedDtor();
}

void SaveResponse::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void SaveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SaveResponse::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SaveResponse& SaveResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_SaveResponse.base);
  return *internal_default_instance();
}


void SaveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.SaveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_features_data_.Clear();
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool SaveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.SaveResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .dto.srr.FeatureAndStatus> map_features_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          SaveResponse_MapFeaturesDataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SaveResponse_MapFeaturesDataEntry_DoNotUse,
              ::std::string, ::dto::srr::FeatureAndStatus,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureAndStatus > > parser(&map_features_data_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.SaveResponse.MapFeaturesDataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.SaveResponse.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string checksum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_checksum()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->checksum().data(), static_cast<int>(this->checksum().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.SaveResponse.checksum"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dto.srr.FeatureStatus status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.SaveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.SaveResponse)
  return false;
#undef DO_
}

void SaveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.SaveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dto.srr.FeatureAndStatus> map_features_data = 1;
  if (!this->map_features_data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureAndStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dto.srr.SaveResponse.MapFeaturesDataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_features_data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_features_data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureAndStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureAndStatus >::const_iterator
          it = this->map_features_data().begin();
          it != this->map_features_data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SaveResponse_MapFeaturesDataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_features_data_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<SaveResponse_MapFeaturesDataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureAndStatus >::const_iterator
          it = this->map_features_data().begin();
          it != this->map_features_data().end(); ++it) {
        entry.reset(map_features_data_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.SaveResponse.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // string checksum = 3;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum().data(), static_cast<int>(this->checksum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.SaveResponse.checksum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->checksum(), output);
  }

  // .dto.srr.FeatureStatus status = 4;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.SaveResponse)
}

::google::protobuf::uint8* SaveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.SaveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dto.srr.FeatureAndStatus> map_features_data = 1;
  if (!this->map_features_data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureAndStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dto.srr.SaveResponse.MapFeaturesDataEntry.key");
      }
    };

    if (deterministic &&
        this->map_features_data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_features_data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureAndStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureAndStatus >::const_iterator
          it = this->map_features_data().begin();
          it != this->map_features_data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SaveResponse_MapFeaturesDataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_features_data_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<SaveResponse_MapFeaturesDataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureAndStatus >::const_iterator
          it = this->map_features_data().begin();
          it != this->map_features_data().end(); ++it) {
        entry.reset(map_features_data_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.SaveResponse.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // string checksum = 3;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum().data(), static_cast<int>(this->checksum().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.SaveResponse.checksum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->checksum(), target);
  }

  // .dto.srr.FeatureStatus status = 4;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.SaveResponse)
  return target;
}

size_t SaveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.SaveResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .dto.srr.FeatureAndStatus> map_features_data = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_features_data_size());
  {
    ::std::unique_ptr<SaveResponse_MapFeaturesDataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureAndStatus >::const_iterator
        it = this->map_features_data().begin();
        it != this->map_features_data().end(); ++it) {
      entry.reset(map_features_data_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string checksum = 3;
  if (this->checksum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->checksum());
  }

  // .dto.srr.FeatureStatus status = 4;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.SaveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.SaveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.SaveResponse)
    MergeFrom(*source);
  }
}

void SaveResponse::MergeFrom(const SaveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.SaveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_features_data_.MergeFrom(from.map_features_data_);
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.checksum().size() > 0) {

    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  if (from.has_status()) {
    mutable_status()->::dto::srr::FeatureStatus::MergeFrom(from.status());
  }
}

void SaveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.SaveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveResponse::CopyFrom(const SaveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.SaveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveResponse::IsInitialized() const {
  return true;
}

void SaveResponse::Swap(SaveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveResponse::InternalSwap(SaveResponse* other) {
  using std::swap;
  map_features_data_.Swap(&other->map_features_data_);
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  checksum_.Swap(&other->checksum_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SaveResponse::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

RestoreResponse_MapFeaturesStatusEntry_DoNotUse::RestoreResponse_MapFeaturesStatusEntry_DoNotUse() {}
RestoreResponse_MapFeaturesStatusEntry_DoNotUse::RestoreResponse_MapFeaturesStatusEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RestoreResponse_MapFeaturesStatusEntry_DoNotUse::MergeFrom(const RestoreResponse_MapFeaturesStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RestoreResponse_MapFeaturesStatusEntry_DoNotUse::GetMetadata() const {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[11];
}
void RestoreResponse_MapFeaturesStatusEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void RestoreResponse::InitAsDefaultInstance() {
  ::dto::srr::_RestoreResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::dto::srr::FeatureStatus*>(
      ::dto::srr::FeatureStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RestoreResponse::kMapFeaturesStatusFieldNumber;
const int RestoreResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RestoreResponse::RestoreResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_RestoreResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.RestoreResponse)
}
RestoreResponse::RestoreResponse(const RestoreResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_features_status_.MergeFrom(from.map_features_status_);
  if (from.has_status()) {
    status_ = new ::dto::srr::FeatureStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:dto.srr.RestoreResponse)
}

void RestoreResponse::SharedCtor() {
  status_ = NULL;
}

RestoreResponse::~RestoreResponse() {
  // @@protoc_insertion_point(destructor:dto.srr.RestoreResponse)
  SharedDtor();
}

void RestoreResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void RestoreResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RestoreResponse::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RestoreResponse& RestoreResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_RestoreResponse.base);
  return *internal_default_instance();
}


void RestoreResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.RestoreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_features_status_.Clear();
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool RestoreResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.RestoreResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .dto.srr.FeatureStatus> map_features_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          RestoreResponse_MapFeaturesStatusEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RestoreResponse_MapFeaturesStatusEntry_DoNotUse,
              ::std::string, ::dto::srr::FeatureStatus,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus > > parser(&map_features_status_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.RestoreResponse.MapFeaturesStatusEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dto.srr.FeatureStatus status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.RestoreResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.RestoreResponse)
  return false;
#undef DO_
}

void RestoreResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.RestoreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dto.srr.FeatureStatus> map_features_status = 1;
  if (!this->map_features_status().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dto.srr.RestoreResponse.MapFeaturesStatusEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_features_status().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_features_status().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_iterator
          it = this->map_features_status().begin();
          it != this->map_features_status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RestoreResponse_MapFeaturesStatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_features_status_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RestoreResponse_MapFeaturesStatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_iterator
          it = this->map_features_status().begin();
          it != this->map_features_status().end(); ++it) {
        entry.reset(map_features_status_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .dto.srr.FeatureStatus status = 2;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.RestoreResponse)
}

::google::protobuf::uint8* RestoreResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.RestoreResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dto.srr.FeatureStatus> map_features_status = 1;
  if (!this->map_features_status().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dto.srr.RestoreResponse.MapFeaturesStatusEntry.key");
      }
    };

    if (deterministic &&
        this->map_features_status().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_features_status().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_iterator
          it = this->map_features_status().begin();
          it != this->map_features_status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RestoreResponse_MapFeaturesStatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_features_status_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RestoreResponse_MapFeaturesStatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_iterator
          it = this->map_features_status().begin();
          it != this->map_features_status().end(); ++it) {
        entry.reset(map_features_status_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .dto.srr.FeatureStatus status = 2;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.RestoreResponse)
  return target;
}

size_t RestoreResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.RestoreResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .dto.srr.FeatureStatus> map_features_status = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_features_status_size());
  {
    ::std::unique_ptr<RestoreResponse_MapFeaturesStatusEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_iterator
        it = this->map_features_status().begin();
        it != this->map_features_status().end(); ++it) {
      entry.reset(map_features_status_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .dto.srr.FeatureStatus status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RestoreResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.RestoreResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RestoreResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RestoreResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.RestoreResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.RestoreResponse)
    MergeFrom(*source);
  }
}

void RestoreResponse::MergeFrom(const RestoreResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.RestoreResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_features_status_.MergeFrom(from.map_features_status_);
  if (from.has_status()) {
    mutable_status()->::dto::srr::FeatureStatus::MergeFrom(from.status());
  }
}

void RestoreResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.RestoreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestoreResponse::CopyFrom(const RestoreResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.RestoreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestoreResponse::IsInitialized() const {
  return true;
}

void RestoreResponse::Swap(RestoreResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RestoreResponse::InternalSwap(RestoreResponse* other) {
  using std::swap;
  map_features_status_.Swap(&other->map_features_status_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RestoreResponse::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ResetResponse_MapFeaturesStatusEntry_DoNotUse::ResetResponse_MapFeaturesStatusEntry_DoNotUse() {}
ResetResponse_MapFeaturesStatusEntry_DoNotUse::ResetResponse_MapFeaturesStatusEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ResetResponse_MapFeaturesStatusEntry_DoNotUse::MergeFrom(const ResetResponse_MapFeaturesStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ResetResponse_MapFeaturesStatusEntry_DoNotUse::GetMetadata() const {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[13];
}
void ResetResponse_MapFeaturesStatusEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ResetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetResponse::kMapFeaturesStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetResponse::ResetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_ResetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.ResetResponse)
}
ResetResponse::ResetResponse(const ResetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_features_status_.MergeFrom(from.map_features_status_);
  // @@protoc_insertion_point(copy_constructor:dto.srr.ResetResponse)
}

void ResetResponse::SharedCtor() {
}

ResetResponse::~ResetResponse() {
  // @@protoc_insertion_point(destructor:dto.srr.ResetResponse)
  SharedDtor();
}

void ResetResponse::SharedDtor() {
}

void ResetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResetResponse::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetResponse& ResetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_ResetResponse.base);
  return *internal_default_instance();
}


void ResetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.ResetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_features_status_.Clear();
  _internal_metadata_.Clear();
}

bool ResetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.ResetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .dto.srr.FeatureStatus> map_features_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ResetResponse_MapFeaturesStatusEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ResetResponse_MapFeaturesStatusEntry_DoNotUse,
              ::std::string, ::dto::srr::FeatureStatus,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus > > parser(&map_features_status_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.ResetResponse.MapFeaturesStatusEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.ResetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.ResetResponse)
  return false;
#undef DO_
}

void ResetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.ResetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dto.srr.FeatureStatus> map_features_status = 1;
  if (!this->map_features_status().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dto.srr.ResetResponse.MapFeaturesStatusEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_features_status().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_features_status().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_iterator
          it = this->map_features_status().begin();
          it != this->map_features_status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ResetResponse_MapFeaturesStatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_features_status_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ResetResponse_MapFeaturesStatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_iterator
          it = this->map_features_status().begin();
          it != this->map_features_status().end(); ++it) {
        entry.reset(map_features_status_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.ResetResponse)
}

::google::protobuf::uint8* ResetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.ResetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dto.srr.FeatureStatus> map_features_status = 1;
  if (!this->map_features_status().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dto.srr.ResetResponse.MapFeaturesStatusEntry.key");
      }
    };

    if (deterministic &&
        this->map_features_status().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_features_status().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_iterator
          it = this->map_features_status().begin();
          it != this->map_features_status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ResetResponse_MapFeaturesStatusEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_features_status_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ResetResponse_MapFeaturesStatusEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_iterator
          it = this->map_features_status().begin();
          it != this->map_features_status().end(); ++it) {
        entry.reset(map_features_status_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.ResetResponse)
  return target;
}

size_t ResetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.ResetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .dto.srr.FeatureStatus> map_features_status = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_features_status_size());
  {
    ::std::unique_ptr<ResetResponse_MapFeaturesStatusEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureStatus >::const_iterator
        it = this->map_features_status().begin();
        it != this->map_features_status().end(); ++it) {
      entry.reset(map_features_status_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.ResetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.ResetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.ResetResponse)
    MergeFrom(*source);
  }
}

void ResetResponse::MergeFrom(const ResetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.ResetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_features_status_.MergeFrom(from.map_features_status_);
}

void ResetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.ResetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetResponse::CopyFrom(const ResetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.ResetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetResponse::IsInitialized() const {
  return true;
}

void ResetResponse::Swap(ResetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetResponse::InternalSwap(ResetResponse* other) {
  using std::swap;
  map_features_status_.Swap(&other->map_features_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResetResponse::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FeatureDependencies::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FeatureDependencies::kDependenciesFieldNumber;
const int FeatureDependencies::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FeatureDependencies::FeatureDependencies()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_FeatureDependencies.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.FeatureDependencies)
}
FeatureDependencies::FeatureDependencies(const FeatureDependencies& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dependencies_(from.dependencies_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:dto.srr.FeatureDependencies)
}

void FeatureDependencies::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FeatureDependencies::~FeatureDependencies() {
  // @@protoc_insertion_point(destructor:dto.srr.FeatureDependencies)
  SharedDtor();
}

void FeatureDependencies::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FeatureDependencies::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FeatureDependencies::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FeatureDependencies& FeatureDependencies::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_FeatureDependencies.base);
  return *internal_default_instance();
}


void FeatureDependencies::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.FeatureDependencies)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dependencies_.Clear();
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FeatureDependencies::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.FeatureDependencies)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string dependencies = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_dependencies()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dependencies(this->dependencies_size() - 1).data(),
            static_cast<int>(this->dependencies(this->dependencies_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.FeatureDependencies.dependencies"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.FeatureDependencies.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.FeatureDependencies)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.FeatureDependencies)
  return false;
#undef DO_
}

void FeatureDependencies::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.FeatureDependencies)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string dependencies = 1;
  for (int i = 0, n = this->dependencies_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependencies(i).data(), static_cast<int>(this->dependencies(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.FeatureDependencies.dependencies");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->dependencies(i), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.FeatureDependencies.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.FeatureDependencies)
}

::google::protobuf::uint8* FeatureDependencies::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.FeatureDependencies)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string dependencies = 1;
  for (int i = 0, n = this->dependencies_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dependencies(i).data(), static_cast<int>(this->dependencies(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.FeatureDependencies.dependencies");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->dependencies(i), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.FeatureDependencies.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.FeatureDependencies)
  return target;
}

size_t FeatureDependencies::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.FeatureDependencies)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string dependencies = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->dependencies_size());
  for (int i = 0, n = this->dependencies_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->dependencies(i));
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FeatureDependencies::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.FeatureDependencies)
  GOOGLE_DCHECK_NE(&from, this);
  const FeatureDependencies* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FeatureDependencies>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.FeatureDependencies)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.FeatureDependencies)
    MergeFrom(*source);
  }
}

void FeatureDependencies::MergeFrom(const FeatureDependencies& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.FeatureDependencies)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dependencies_.MergeFrom(from.dependencies_);
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void FeatureDependencies::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.FeatureDependencies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeatureDependencies::CopyFrom(const FeatureDependencies& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.FeatureDependencies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureDependencies::IsInitialized() const {
  return true;
}

void FeatureDependencies::Swap(FeatureDependencies* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FeatureDependencies::InternalSwap(FeatureDependencies* other) {
  using std::swap;
  dependencies_.InternalSwap(CastToBase(&other->dependencies_));
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FeatureDependencies::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse::ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse() {}
ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse::ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse::MergeFrom(const ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[16];
}
void ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ListFeatureResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFeatureResponse::kMapFeaturesDependenciesFieldNumber;
const int ListFeatureResponse::kVersionFieldNumber;
const int ListFeatureResponse::kPassphrassDefinitionFieldNumber;
const int ListFeatureResponse::kPassphrassDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFeatureResponse::ListFeatureResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_ListFeatureResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.ListFeatureResponse)
}
ListFeatureResponse::ListFeatureResponse(const ListFeatureResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_features_dependencies_.MergeFrom(from.map_features_dependencies_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  passphrass_definition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passphrass_definition().size() > 0) {
    passphrass_definition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrass_definition_);
  }
  passphrass_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passphrass_description().size() > 0) {
    passphrass_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrass_description_);
  }
  // @@protoc_insertion_point(copy_constructor:dto.srr.ListFeatureResponse)
}

void ListFeatureResponse::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passphrass_definition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passphrass_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListFeatureResponse::~ListFeatureResponse() {
  // @@protoc_insertion_point(destructor:dto.srr.ListFeatureResponse)
  SharedDtor();
}

void ListFeatureResponse::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passphrass_definition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passphrass_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListFeatureResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFeatureResponse::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFeatureResponse& ListFeatureResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_ListFeatureResponse.base);
  return *internal_default_instance();
}


void ListFeatureResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.ListFeatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_features_dependencies_.Clear();
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passphrass_definition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passphrass_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListFeatureResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.ListFeatureResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .dto.srr.FeatureDependencies> map_features_dependencies = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse,
              ::std::string, ::dto::srr::FeatureDependencies,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureDependencies > > parser(&map_features_dependencies_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.ListFeatureResponse.MapFeaturesDependenciesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.ListFeatureResponse.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string passphrass_definition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passphrass_definition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passphrass_definition().data(), static_cast<int>(this->passphrass_definition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.ListFeatureResponse.passphrass_definition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string passphrass_description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passphrass_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passphrass_description().data(), static_cast<int>(this->passphrass_description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dto.srr.ListFeatureResponse.passphrass_description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.ListFeatureResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.ListFeatureResponse)
  return false;
#undef DO_
}

void ListFeatureResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.ListFeatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dto.srr.FeatureDependencies> map_features_dependencies = 1;
  if (!this->map_features_dependencies().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureDependencies >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dto.srr.ListFeatureResponse.MapFeaturesDependenciesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_features_dependencies().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_features_dependencies().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureDependencies >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureDependencies >::const_iterator
          it = this->map_features_dependencies().begin();
          it != this->map_features_dependencies().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_features_dependencies_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureDependencies >::const_iterator
          it = this->map_features_dependencies().begin();
          it != this->map_features_dependencies().end(); ++it) {
        entry.reset(map_features_dependencies_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.ListFeatureResponse.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // string passphrass_definition = 3;
  if (this->passphrass_definition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passphrass_definition().data(), static_cast<int>(this->passphrass_definition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.ListFeatureResponse.passphrass_definition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->passphrass_definition(), output);
  }

  // string passphrass_description = 4;
  if (this->passphrass_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passphrass_description().data(), static_cast<int>(this->passphrass_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.ListFeatureResponse.passphrass_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->passphrass_description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.ListFeatureResponse)
}

::google::protobuf::uint8* ListFeatureResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.ListFeatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .dto.srr.FeatureDependencies> map_features_dependencies = 1;
  if (!this->map_features_dependencies().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureDependencies >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dto.srr.ListFeatureResponse.MapFeaturesDependenciesEntry.key");
      }
    };

    if (deterministic &&
        this->map_features_dependencies().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_features_dependencies().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::dto::srr::FeatureDependencies >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureDependencies >::const_iterator
          it = this->map_features_dependencies().begin();
          it != this->map_features_dependencies().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_features_dependencies_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureDependencies >::const_iterator
          it = this->map_features_dependencies().begin();
          it != this->map_features_dependencies().end(); ++it) {
        entry.reset(map_features_dependencies_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.ListFeatureResponse.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // string passphrass_definition = 3;
  if (this->passphrass_definition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passphrass_definition().data(), static_cast<int>(this->passphrass_definition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.ListFeatureResponse.passphrass_definition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->passphrass_definition(), target);
  }

  // string passphrass_description = 4;
  if (this->passphrass_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passphrass_description().data(), static_cast<int>(this->passphrass_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dto.srr.ListFeatureResponse.passphrass_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->passphrass_description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.ListFeatureResponse)
  return target;
}

size_t ListFeatureResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.ListFeatureResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .dto.srr.FeatureDependencies> map_features_dependencies = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_features_dependencies_size());
  {
    ::std::unique_ptr<ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::dto::srr::FeatureDependencies >::const_iterator
        it = this->map_features_dependencies().begin();
        it != this->map_features_dependencies().end(); ++it) {
      entry.reset(map_features_dependencies_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string passphrass_definition = 3;
  if (this->passphrass_definition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passphrass_definition());
  }

  // string passphrass_description = 4;
  if (this->passphrass_description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passphrass_description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFeatureResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.ListFeatureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFeatureResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFeatureResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.ListFeatureResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.ListFeatureResponse)
    MergeFrom(*source);
  }
}

void ListFeatureResponse::MergeFrom(const ListFeatureResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.ListFeatureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_features_dependencies_.MergeFrom(from.map_features_dependencies_);
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.passphrass_definition().size() > 0) {

    passphrass_definition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrass_definition_);
  }
  if (from.passphrass_description().size() > 0) {

    passphrass_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrass_description_);
  }
}

void ListFeatureResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.ListFeatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFeatureResponse::CopyFrom(const ListFeatureResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.ListFeatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFeatureResponse::IsInitialized() const {
  return true;
}

void ListFeatureResponse::Swap(ListFeatureResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFeatureResponse::InternalSwap(ListFeatureResponse* other) {
  using std::swap;
  map_features_dependencies_.Swap(&other->map_features_dependencies_);
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  passphrass_definition_.Swap(&other->passphrass_definition_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  passphrass_description_.Swap(&other->passphrass_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFeatureResponse::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::dto::srr::_Response_default_instance_.save_ = const_cast< ::dto::srr::SaveResponse*>(
      ::dto::srr::SaveResponse::internal_default_instance());
  ::dto::srr::_Response_default_instance_.restore_ = const_cast< ::dto::srr::RestoreResponse*>(
      ::dto::srr::RestoreResponse::internal_default_instance());
  ::dto::srr::_Response_default_instance_.reset_ = const_cast< ::dto::srr::ResetResponse*>(
      ::dto::srr::ResetResponse::internal_default_instance());
  ::dto::srr::_Response_default_instance_.list_feature_ = const_cast< ::dto::srr::ListFeatureResponse*>(
      ::dto::srr::ListFeatureResponse::internal_default_instance());
}
void Response::set_allocated_save(::dto::srr::SaveResponse* save) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (save) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      save = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, save, submessage_arena);
    }
    set_has_save();
    parameters_.save_ = save;
  }
  // @@protoc_insertion_point(field_set_allocated:dto.srr.Response.save)
}
void Response::set_allocated_restore(::dto::srr::RestoreResponse* restore) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (restore) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      restore = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, restore, submessage_arena);
    }
    set_has_restore();
    parameters_.restore_ = restore;
  }
  // @@protoc_insertion_point(field_set_allocated:dto.srr.Response.restore)
}
void Response::set_allocated_reset(::dto::srr::ResetResponse* reset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (reset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reset, submessage_arena);
    }
    set_has_reset();
    parameters_.reset_ = reset;
  }
  // @@protoc_insertion_point(field_set_allocated:dto.srr.Response.reset)
}
void Response::set_allocated_list_feature(::dto::srr::ListFeatureResponse* list_feature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameters();
  if (list_feature) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      list_feature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, list_feature, submessage_arena);
    }
    set_has_list_feature();
    parameters_.list_feature_ = list_feature;
  }
  // @@protoc_insertion_point(field_set_allocated:dto.srr.Response.list_feature)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kSaveFieldNumber;
const int Response::kRestoreFieldNumber;
const int Response::kResetFieldNumber;
const int Response::kListFeatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_srr_2eproto::scc_info_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dto.srr.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_parameters();
  switch (from.parameters_case()) {
    case kSave: {
      mutable_save()->::dto::srr::SaveResponse::MergeFrom(from.save());
      break;
    }
    case kRestore: {
      mutable_restore()->::dto::srr::RestoreResponse::MergeFrom(from.restore());
      break;
    }
    case kReset: {
      mutable_reset()->::dto::srr::ResetResponse::MergeFrom(from.reset());
      break;
    }
    case kListFeature: {
      mutable_list_feature()->::dto::srr::ListFeatureResponse::MergeFrom(from.list_feature());
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:dto.srr.Response)
}

void Response::SharedCtor() {
  clear_has_parameters();
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:dto.srr.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (has_parameters()) {
    clear_parameters();
  }
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_srr_2eproto::scc_info_Response.base);
  return *internal_default_instance();
}


void Response::clear_parameters() {
// @@protoc_insertion_point(one_of_clear_start:dto.srr.Response)
  switch (parameters_case()) {
    case kSave: {
      delete parameters_.save_;
      break;
    }
    case kRestore: {
      delete parameters_.restore_;
      break;
    }
    case kReset: {
      delete parameters_.reset_;
      break;
    }
    case kListFeature: {
      delete parameters_.list_feature_;
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETERS_NOT_SET;
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:dto.srr.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_parameters();
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dto.srr.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .dto.srr.SaveResponse save = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_save()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dto.srr.RestoreResponse restore = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_restore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dto.srr.ResetResponse reset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dto.srr.ListFeatureResponse list_feature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list_feature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dto.srr.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dto.srr.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dto.srr.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dto.srr.SaveResponse save = 1;
  if (has_save()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_save(), output);
  }

  // .dto.srr.RestoreResponse restore = 2;
  if (has_restore()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_restore(), output);
  }

  // .dto.srr.ResetResponse reset = 3;
  if (has_reset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_reset(), output);
  }

  // .dto.srr.ListFeatureResponse list_feature = 4;
  if (has_list_feature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_list_feature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dto.srr.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dto.srr.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .dto.srr.SaveResponse save = 1;
  if (has_save()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_save(), deterministic, target);
  }

  // .dto.srr.RestoreResponse restore = 2;
  if (has_restore()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_restore(), deterministic, target);
  }

  // .dto.srr.ResetResponse reset = 3;
  if (has_reset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_reset(), deterministic, target);
  }

  // .dto.srr.ListFeatureResponse list_feature = 4;
  if (has_list_feature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_list_feature(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dto.srr.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dto.srr.Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (parameters_case()) {
    // .dto.srr.SaveResponse save = 1;
    case kSave: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.save_);
      break;
    }
    // .dto.srr.RestoreResponse restore = 2;
    case kRestore: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.restore_);
      break;
    }
    // .dto.srr.ResetResponse reset = 3;
    case kReset: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.reset_);
      break;
    }
    // .dto.srr.ListFeatureResponse list_feature = 4;
    case kListFeature: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameters_.list_feature_);
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dto.srr.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dto.srr.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dto.srr.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dto.srr.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.parameters_case()) {
    case kSave: {
      mutable_save()->::dto::srr::SaveResponse::MergeFrom(from.save());
      break;
    }
    case kRestore: {
      mutable_restore()->::dto::srr::RestoreResponse::MergeFrom(from.restore());
      break;
    }
    case kReset: {
      mutable_reset()->::dto::srr::ResetResponse::MergeFrom(from.reset());
      break;
    }
    case kListFeature: {
      mutable_list_feature()->::dto::srr::ListFeatureResponse::MergeFrom(from.list_feature());
      break;
    }
    case PARAMETERS_NOT_SET: {
      break;
    }
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dto.srr.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dto.srr.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  swap(parameters_, other->parameters_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_srr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_srr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace srr
}  // namespace dto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::Feature* Arena::CreateMaybeMessage< ::dto::srr::Feature >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::Feature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::FeatureStatus* Arena::CreateMaybeMessage< ::dto::srr::FeatureStatus >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::FeatureStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::SaveQuery* Arena::CreateMaybeMessage< ::dto::srr::SaveQuery >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::SaveQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::RestoreQuery_MapFeaturesDataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dto::srr::RestoreQuery_MapFeaturesDataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::RestoreQuery_MapFeaturesDataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::RestoreQuery* Arena::CreateMaybeMessage< ::dto::srr::RestoreQuery >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::RestoreQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::ResetQuery* Arena::CreateMaybeMessage< ::dto::srr::ResetQuery >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::ResetQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::ListFeatureQuery* Arena::CreateMaybeMessage< ::dto::srr::ListFeatureQuery >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::ListFeatureQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::Query* Arena::CreateMaybeMessage< ::dto::srr::Query >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::Query >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::FeatureAndStatus* Arena::CreateMaybeMessage< ::dto::srr::FeatureAndStatus >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::FeatureAndStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::SaveResponse_MapFeaturesDataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dto::srr::SaveResponse_MapFeaturesDataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::SaveResponse_MapFeaturesDataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::SaveResponse* Arena::CreateMaybeMessage< ::dto::srr::SaveResponse >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::SaveResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::RestoreResponse_MapFeaturesStatusEntry_DoNotUse* Arena::CreateMaybeMessage< ::dto::srr::RestoreResponse_MapFeaturesStatusEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::RestoreResponse_MapFeaturesStatusEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::RestoreResponse* Arena::CreateMaybeMessage< ::dto::srr::RestoreResponse >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::RestoreResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::ResetResponse_MapFeaturesStatusEntry_DoNotUse* Arena::CreateMaybeMessage< ::dto::srr::ResetResponse_MapFeaturesStatusEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::ResetResponse_MapFeaturesStatusEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::ResetResponse* Arena::CreateMaybeMessage< ::dto::srr::ResetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::ResetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::FeatureDependencies* Arena::CreateMaybeMessage< ::dto::srr::FeatureDependencies >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::FeatureDependencies >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse* Arena::CreateMaybeMessage< ::dto::srr::ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::ListFeatureResponse_MapFeaturesDependenciesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::ListFeatureResponse* Arena::CreateMaybeMessage< ::dto::srr::ListFeatureResponse >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::ListFeatureResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dto::srr::Response* Arena::CreateMaybeMessage< ::dto::srr::Response >(Arena* arena) {
  return Arena::CreateInternal< ::dto::srr::Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
